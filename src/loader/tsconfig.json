/**
 * This `ts-config.json` is used only for type-checking! We use Babel and
 * `@babel/preset-typescript`.
 *
 * `tsconfig.json` determines how TypeScript does type checking. It also has some options
 * affecting how TypeScript emits files, but since you're using babel instead, those don't apply.
 */
{

	"baseUrl": "./src",
	/**
	 * `compilerOptions` specify how the Typescript compiler works.
	 */
	"compilerOptions": {
		/**
		 * 
		 */
		"baseUrl": "./src",

		/**
		 * path to output directory,
		 * make sure to add it to the `.gitignore`
		 */
		"outDir": "./dist/",


		// Target latest version of ECMAScript.
		"target": "esnext",
		
		// enable strict null checks as a best practice
		"strictNullChecks": true,
		// Search under node_modules for non-relative imports.
		"moduleResolution": "node",
		// Process & infer types from .js files.
		"allowJs": true,
		// Don't emit; allow Babel to transform files.
		"noEmit": true,
		// Enable strictest settings like strictNullChecks & noImplicitAny.
		"strict": true,
		// Import non-ES modules as default imports.
		"esModuleInterop": true,
		// use typescript to transpile jsx to js
		"jsx": "react",
		
		"lib": [
			"es2015",
			"dom.iterable",
			"es2016.array.include",
			"es2017.object",
			"dom"
		],
		"module": "es6",
		"removeComments": true,
		"alwaysStrict": true,
		"allowUnreachableCode": false,
		"noImplicitAny": true,
		"noImplicitThis": true,
		"noUnusedLocals": true,
		"noUnusedParameters": true,
		"noImplicitReturns": true,
		"noFallthroughCasesInSwitch": true,
		"forceConsistentCasingInFileNames": true,
		"importHelpers": true,

	},
	
	
}